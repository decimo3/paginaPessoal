Request {
  _allowInternals: false,
  _core: {
    actives: WeakMap { <items unknown> },
    app: {},
    auth: {
      api: {},
      settings: [Object],
      strategy: [Function: bound _strategy]
    },
    caches: Map { '_default' => [Object] },
    compression: { decoders: [Object], encodings: [Array], encoders: [Object] },
    controlled: null,
    dependencies: [],
    events: {
      _eventListeners: [Map],
      _notificationsQueue: [],
      _eventsProcessing: false,
      _sourcePodiums: []
    },
    heavy: {
      settings: [Object],
      _eventLoopTimer: null,
      _loadBench: [Object],
      load: [Object]
    },
    info: {
      created: 1592700247308,
      started: 1592700247501,
      host: 'localhost',
      port: 3000,
      protocol: 'http',
      id: 'LAPTOP-EGM2FM7A:15124:kbocls0c',
      uri: 'http://localhost:3000',
      address: '127.0.0.1'
    },
    instances: Set { [Object], [Object], [Object] },
    listener: Server {
      insecureHTTPParser: undefined,
      _events: [Object: null prototype],
      _eventsCount: 4,
      _maxListeners: undefined,
      _connections: 2,
      _handle: [TCP],
      _usingWorkers: false,
      _workers: [],
      _unref: false,
      allowHalfOpen: true,
      pauseOnConnect: false,
      httpAllowHalfOpen: false,
      timeout: 120000,
      keepAliveTimeout: 5000,
      maxHeadersCount: null,
      headersTimeout: 40000,
      _connectionKey: '4:127.0.0.1:3000',
      [Symbol(IncomingMessage)]: [Function: IncomingMessage],
      [Symbol(ServerResponse)]: [Function: ServerResponse],
      [Symbol(kCapture)]: false,
      [Symbol(asyncId)]: 17
    },
    methods: { methods: {} },
    mime: Mimos { _byType: [Object], _byExtension: [Object] },
    onConnection: [Function],
    phase: 'started',
    plugins: { inert: [Object] },
    registrations: { 'hapi-cors': [Object], '@hapi/inert': [Object] },
    registring: 0,
    Request: [Function: Request],
    requestCounter: { value: 10008, min: 10000, max: 99999 },
    root: {
      _core: [Circular],
      app: {},
      auth: [Object],
      decorations: [Object],
      cache: [Function],
      events: [Object],
      info: [Object],
      listener: [Server],
      load: [Object],
      methods: {},
      mime: [Mimos],
      plugins: [Object],
      registrations: [Object],
      settings: [Object],
      states: [Object],
      type: 'tcp',
      version: '19.1.1',
      realm: [Object]
    },
    router: {
      settings: [Object],
      routes: [Map],
      ids: Map {},
      vhosts: null,
      specials: [Object]
    },
    settings: {
      port: 3000,
      host: 'localhost',
      routes: [Object],
      compression: [Object],
      debug: [Object],
      info: {},
      load: [Object],
      mime: null,
      operations: [Object],
      query: {},
      router: [Object],
      autoListen: true
    },
    sockets: Set { [Socket], [Socket] },
    started: true,
    states: { settings: [Object], cookies: {}, names: [] },
    toolkit: { _toolkit: [Function: Toolkit] },
    type: 'tcp',
    validator: null,
    extensionsSeq: 8,
    extensions: { server: [Object], route: [Object] },
    decorations: {
      handler: [Map],
      request: Map {},
      server: Map {},
      toolkit: [Map],
      requestApply: null,
      public: [Object]
    }
  },
  _entity: null,
  _eventContext: { request: [Circular] },
  _events: null,
  _expectContinue: false,
  _isPayloadPending: false,
  _isReplied: false,
  _route: {
    method: 'post',
    path: '/api/v1/publicacao',
    settings: {
      cache: [Object],
      compression: {},
      cors: false,
      ext: {},
      files: [Object],
      json: [Object],
      log: [Object],
      payload: [Object],
      response: [Object],
      security: null,
      state: [Object],
      timeout: [Object],
      validate: [Object],
      bind: undefined,
      vhost: undefined,
      plugins: {},
      app: {},
      auth: undefined,
      handler: [AsyncFunction: criarPublicação]
    },
    _core: {
      actives: [WeakMap],
      app: {},
      auth: [Object],
      caches: [Map],
      compression: [Object],
      controlled: null,
      dependencies: [],
      events: [Object],
      heavy: [Object],
      info: [Object],
      instances: [Set],
      listener: [Server],
      methods: [Object],
      mime: [Mimos],
      onConnection: [Function],
      phase: 'started',
      plugins: [Object],
      registrations: [Object],
      registring: 0,
      Request: [Function: Request],
      requestCounter: [Object],
      root: [Object],
      router: [Object],
      settings: [Object],
      sockets: [Set],
      started: true,
      states: [Object],
      toolkit: [Object],
      type: 'tcp',
      validator: null,
      extensionsSeq: 8,
      extensions: [Object],
      decorations: [Object]
    },
    realm: {
      _extensions: [Object],
      modifiers: [Object],
      parent: null,
      plugin: undefined,
      pluginOptions: {},
      plugins: {},
      _rules: null,
      settings: [Object],
      validator: null
    },
    _special: false,
    _analysis: {
      segments: [Array],
      fingerprint: '/api/v1/publicacao',
      params: []
    },
    params: [],
    fingerprint: '/api/v1/publicacao',
    public: {
      method: 'post',
      path: '/api/v1/publicacao',
      vhost: undefined,
      realm: [Object],
      settings: [Object],
      fingerprint: '/api/v1/publicacao',
      auth: [Object]
    },
    _prerequisites: null,
    _extensions: {
      onPreResponse: [Object],
      onPreAuth: [Object],
      onCredentials: [Object],
      onPostAuth: [Object],
      onPreHandler: [Object],
      onPostHandler: [Object]
    },
    _cycle: [ [AsyncFunction], [AsyncFunction], [AsyncFunction] ],
    _postCycle: [ [Object] ],
    _marshalCycle: [
      [Function],
      [Function],
      [Function],
      [AsyncFunction],
      [AsyncFunction]
    ]
  },
  _serverTimeoutId: null,
  _states: {},
  _url: null,
  _urlError: null,
  app: {},
  headers: {
    host: 'localhost:3000',
    connection: 'keep-alive',
    'content-length': '37',
    pragma: 'no-cache',
    'cache-control': 'no-cache',
    'upgrade-insecure-requests': '1',
    origin: 'http://localhost:5500',
    'content-type': 'application/x-www-form-urlencoded',
    'user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/83.0.4103.106 Safari/537.36',
    accept: 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9',
    'sec-fetch-site': 'same-site',
    'sec-fetch-mode': 'navigate',
    'sec-fetch-user': '?1',
    'sec-fetch-dest': 'document',
    referer: 'http://localhost:5500/public/index.html',
    'accept-encoding': 'gzip, deflate, br',
    'accept-language': 'pt-BR,pt;q=0.9,en-US;q=0.8,en;q=0.7'
  },
  jsonp: null,
  logs: [],
  method: 'post',
  mime: 'application/x-www-form-urlencoded',
  orig: {},
  params: {},
  paramsArray: [],
  path: '/api/v1/publicacao',
  payload: [Object: null prototype] {
    txtTitulo: 'mario',
    txtDepoimento: 'armario'
  },
  plugins: {},
  pre: {},
  preResponses: {},
  raw: {
    req: IncomingMessage {
      _readableState: [ReadableState],
      readable: false,
      _events: [Object: null prototype],
      _eventsCount: 4,
      _maxListeners: undefined,
      socket: [Socket],
      connection: [Socket],
      httpVersionMajor: 1,
      httpVersionMinor: 1,
      httpVersion: '1.1',
      complete: true,
      headers: [Object],
      rawHeaders: [Array],
      trailers: {},
      rawTrailers: [],
      aborted: false,
      upgrade: false,
      url: '/api/v1/publicacao',
      method: 'POST',
      statusCode: null,
      statusMessage: null,
      client: [Socket],
      _consuming: true,
      _dumped: false,
      [Symbol(kCapture)]: false
    },
    res: ServerResponse {
      _events: [Object: null prototype],
      _eventsCount: 1,
      _maxListeners: undefined,
      outputData: [],
      outputSize: 0,
      writable: true,
      _last: false,
      chunkedEncoding: false,
      shouldKeepAlive: true,
      useChunkedEncodingByDefault: true,
      sendDate: true,
      _removedConnection: false,
      _removedContLen: false,
      _removedTE: false,
      _contentLength: null,
      _hasBody: true,
      _trailer: '',
      finished: false,
      _headerSent: false,
      socket: [Socket],
      connection: [Socket],
      _header: null,
      _onPendingData: [Function: bound updateOutgoingData],
      _sent100: false,
      _expect_continue: false,
      [Symbol(kCapture)]: false,
      [Symbol(kNeedDrain)]: false,
      [Symbol(corked)]: 0,
      [Symbol(kOutHeaders)]: null
    }
  },
  response: null,
  route: {
    method: 'post',
    path: '/api/v1/publicacao',
    vhost: undefined,
    realm: {
      _extensions: [Object],
      modifiers: [Object],
      parent: null,
      plugin: undefined,
      pluginOptions: {},
      plugins: {},
      _rules: null,
      settings: [Object],
      validator: null
    },
    settings: {
      cache: [Object],
      compression: {},
      cors: false,
      ext: {},
      files: [Object],
      json: [Object],
      log: [Object],
      payload: [Object],
      response: [Object],
      security: null,
      state: [Object],
      timeout: [Object],
      validate: [Object],
      bind: undefined,
      vhost: undefined,
      plugins: {},
      app: {},
      auth: undefined,
      handler: [AsyncFunction: criarPublicação]
    },
    fingerprint: '/api/v1/publicacao',
    auth: { access: [Function: access] }
  },
  query: [Object: null prototype] {},
  server: {
    _core: {
      actives: [WeakMap],
      app: {},
      auth: [Object],
      caches: [Map],
      compression: [Object],
      controlled: null,
      dependencies: [],
      events: [Object],
      heavy: [Object],
      info: [Object],
      instances: [Set],
      listener: [Server],
      methods: [Object],
      mime: [Mimos],
      onConnection: [Function],
      phase: 'started',
      plugins: [Object],
      registrations: [Object],
      registring: 0,
      Request: [Function: Request],
      requestCounter: [Object],
      root: [Circular],
      router: [Object],
      settings: [Object],
      sockets: [Set],
      started: true,
      states: [Object],
      toolkit: [Object],
      type: 'tcp',
      validator: null,
      extensionsSeq: 8,
      extensions: [Object],
      decorations: [Object]
    },
    app: {},
    auth: {
      api: {},
      settings: [Object],
      strategy: [Function: bound _strategy]
    },
    decorations: { handler: [Array], request: [], server: [], toolkit: [Array] },
    cache: [Function: policy] { provision: [AsyncFunction] },
    events: {
      _eventListeners: [Map],
      _notificationsQueue: [],
      _eventsProcessing: false,
      _sourcePodiums: []
    },
    info: {
      created: 1592700247308,
      started: 1592700247501,
      host: 'localhost',
      port: 3000,
      protocol: 'http',
      id: 'LAPTOP-EGM2FM7A:15124:kbocls0c',
      uri: 'http://localhost:3000',
      address: '127.0.0.1'
    },
    listener: Server {
      insecureHTTPParser: undefined,
      _events: [Object: null prototype],
      _eventsCount: 4,
      _maxListeners: undefined,
      _connections: 2,
      _handle: [TCP],
      _usingWorkers: false,
      _workers: [],
      _unref: false,
      allowHalfOpen: true,
      pauseOnConnect: false,
      httpAllowHalfOpen: false,
      timeout: 120000,
      keepAliveTimeout: 5000,
      maxHeadersCount: null,
      headersTimeout: 40000,
      _connectionKey: '4:127.0.0.1:3000',
      [Symbol(IncomingMessage)]: [Function: IncomingMessage],
      [Symbol(ServerResponse)]: [Function: ServerResponse],
      [Symbol(kCapture)]: false,
      [Symbol(asyncId)]: 17
    },
    load: { eventLoopDelay: 0, heapUsed: 0, rss: 0 },
    methods: {},
    mime: Mimos { _byType: [Object], _byExtension: [Object] },
    plugins: { inert: [Object] },
    registrations: { 'hapi-cors': [Object], '@hapi/inert': [Object] },
    settings: {
      port: 3000,
      host: 'localhost',
      routes: [Object],
      compression: [Object],
      debug: [Object],
      info: {},
      load: [Object],
      mime: null,
      operations: [Object],
      query: {},
      router: [Object],
      autoListen: true
    },
    states: { settings: [Object], cookies: {}, names: [] },
    type: 'tcp',
    version: '19.1.1',
    realm: {
      _extensions: [Object],
      modifiers: [Object],
      parent: null,
      plugin: undefined,
      pluginOptions: {},
      plugins: {},
      _rules: null,
      settings: [Object],
      validator: null
    }
  },
  state: {},
  info: {
    _request: [Circular],
    received: 1592700920576,
    referrer: 'http://localhost:5500/public/index.html',
    host: 'localhost:3000',
    hostname: 'localhost',
    id: '1592700920576:LAPTOP-EGM2FM7A:15124:kbocls0c:10007',
    _remoteAddress: null,
    _remotePort: null,
    acceptEncoding: 'gzip',
    cors: null,
    responded: 0,
    completed: 0
  },
  auth: {
    isAuthenticated: false,
    isAuthorized: false,
    isInjected: false,
    credentials: null,
    artifacts: null,
    strategy: null,
    mode: null,
    error: null
  }
}
